/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Controladores_Interfaces.IAlimentoController;
import Logica.Fabrica;
import Logica.Resenia;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luisg
 */
public class Resenias extends javax.swing.JInternalFrame {
    DefaultTableModel md; 
    String data[][]={};
    List<Resenia> resenias = null;
    IAlimentoController platoController;
    /**
     * Creates new form Resenias
     */
    public Resenias(int plato) {
        initComponents();
        
        String columnas[]={"Id","Plato","Descripcion","Autor","Fecha"};
        md = new DefaultTableModel(data,columnas);
        tabla.setModel(md);
        
        platoController = Fabrica.getInstancia().getAlimentoController();
        //this.reseniasAux = platoController.listarResenias();
        this.resenias = platoController.listarResenias(plato);
        
        
        if(this.resenias==null||this.resenias.size()<=0){
            JOptionPane.showMessageDialog(this,"Este plato no tiene reseñas");
            salir();
            //return;
            //muestro mensaje de que on hay reseñas
        }

        //lleno la tabla
        for(Resenia aux : this.resenias){ 
//            
            String datos[]={
                String.valueOf(aux.getId()),
                String.valueOf(aux.getPlato().getId())+"-"+aux.getPlato().getNombre(),
                String.valueOf(aux.getDescipcion()),
                String.valueOf(aux.getAutor()),
                String.valueOf(aux.getFecha_hora())
            };
            md.addRow(datos);
        }
        
    }
void salir(){
        e_menu m = (e_menu) this.getTopLevelAncestor();
        m.desbloquearFondo();
        this.dispose();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Salir = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        Salir.setText("Atras");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        jLabel1.setText("Reseñas");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 32, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Salir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eliminar)
                        .addGap(40, 40, 40))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Salir)
                    .addComponent(eliminar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        salir();
        e_menu m = (e_menu) this.getTopLevelAncestor();
        m.mostrarPlatos();
    }//GEN-LAST:event_SalirActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
       
        if(tabla.getSelectedRow()!=-1){
                int seleccionado = tabla.getSelectedRow();
                int id = Integer.parseInt(this.tabla.getValueAt(seleccionado, 0).toString());
                 platoController.eliminarResenia(buscarResenia(id));
                JOptionPane.showMessageDialog(this,"Reseña eliminada correctamente");
            }else{
                JOptionPane.showMessageDialog(this,"Por favor seleccione una reseña");
            }
    }//GEN-LAST:event_eliminarActionPerformed
public Resenia buscarResenia(int id){
        for(Resenia aux : this.resenias){
            if(aux.getId() == id){
                return aux;
            }
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Salir;
    private javax.swing.JButton eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
